name: Scheduled release of all packages

on:
  schedule:
    - cron: "0 0 1 * *"
  workflow_dispatch:
    inputs:
      library:
        description: "Library to build and test."
  workflow_call:
    inputs:
      library:
        description: "Library to build and test"
        type: string
    secrets:
      REPO_ACCESS_TOKEN:
        description: "Token that enables adding a tag to this repository"
      WEBSITE_ACCESS_TOKEN:
        description: "Token that enables writing to the website repository"

jobs:
  # base build
  build_base:
    if: >-
      github.repository == 'fem-on-kaggle/fem-on-kaggle' && (
        github.event_name == 'schedule' || github.event.inputs.library == 'base'
      )
    uses: fem-on-kaggle/fem-on-kaggle/.github/workflows/docker_base.yml@main
    with:
      push: "yes"
      fem_on_colab_branch: "main"

  # gcc build & test
  build_gcc:
    needs: [build_base]
    if: >-
      github.repository == 'fem-on-kaggle/fem-on-kaggle' && (
        (
          github.event_name == 'schedule' && needs.build_base.result == 'success'
        ) || (
          github.event_name != 'schedule' && github.event.inputs.library == 'gcc' && needs.build_base.result == 'skipped' && always() && !cancelled()
        ) || (
          github.event_name != 'schedule' && github.event.inputs.library != 'gcc' && needs.build_base.result == 'success' && always() && !cancelled()
        )
      )
    uses: fem-on-kaggle/fem-on-kaggle/.github/workflows/release.yml@main
    with:
      library: "gcc"
      task: "build"
      args: "12.3.0"
      strip-args-when-packaging: "true"
    secrets:
      REPO_ACCESS_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}
      WEBSITE_ACCESS_TOKEN: ${{ secrets.WEBSITE_ACCESS_TOKEN }}

  test_gcc:
    needs: [build_gcc]
    if: >-
      github.repository == 'fem-on-kaggle/fem-on-kaggle' && (
        (
          github.event_name == 'schedule' && needs.build_gcc.result == 'success'
        ) || (
          github.event_name != 'schedule' && needs.build_gcc.result == 'success' && always() && !cancelled()
        )
      )
    uses: fem-on-kaggle/fem-on-kaggle/.github/workflows/release.yml@main
    with:
      library: "gcc"
      task: "test"
      args: ""
      strip-args-when-packaging: ""

  # Boost build & test
  build_boost:
    needs: [test_gcc]
    if: >-
      github.repository == 'fem-on-kaggle/fem-on-kaggle' && (
        (
          github.event_name == 'schedule' && needs.test_gcc.result == 'success'
        ) || (
          github.event_name != 'schedule' && github.event.inputs.library == 'boost' && needs.test_gcc.result == 'skipped' && always() && !cancelled()
        ) || (
          github.event_name != 'schedule' && github.event.inputs.library != 'boost' && needs.test_gcc.result == 'success' && always() && !cancelled()
        )
      )
    uses: fem-on-kaggle/fem-on-kaggle/.github/workflows/release.yml@main
    with:
      library: "boost"
      task: "build"
      args: ""
      strip-args-when-packaging: ""
    secrets:
      REPO_ACCESS_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}
      WEBSITE_ACCESS_TOKEN: ${{ secrets.WEBSITE_ACCESS_TOKEN }}

  test_boost:
    needs: [build_boost]
    if: >-
      github.repository == 'fem-on-kaggle/fem-on-kaggle' && (
        (
          github.event_name == 'schedule' && needs.build_boost.result == 'success'
        ) || (
          github.event_name != 'schedule' && needs.build_boost.result == 'success' && always() && !cancelled()
        )
      )
    uses: fem-on-kaggle/fem-on-kaggle/.github/workflows/release.yml@main
    with:
      library: "boost"
      task: "test"
      args: ""
      strip-args-when-packaging: ""

  # mpi4py build & test
  build_mpi4py:
    needs: [test_gcc]
    if: >-
      github.repository == 'fem-on-kaggle/fem-on-kaggle' && (
        (
          github.event_name == 'schedule' && needs.test_gcc.result == 'success'
        ) || (
          github.event_name != 'schedule' && github.event.inputs.library == 'mpi4py' && needs.test_gcc.result == 'skipped' && always() && !cancelled()
        ) || (
          github.event_name != 'schedule' && github.event.inputs.library != 'mpi4py' && needs.test_gcc.result == 'success' && always() && !cancelled()
        )
      )
    uses: fem-on-kaggle/fem-on-kaggle/.github/workflows/release.yml@main
    with:
      library: "mpi4py"
      task: "build"
      args: ""
      strip-args-when-packaging: ""
    secrets:
      REPO_ACCESS_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}
      WEBSITE_ACCESS_TOKEN: ${{ secrets.WEBSITE_ACCESS_TOKEN }}

  test_mpi4py:
    needs: [build_mpi4py]
    if: >-
      github.repository == 'fem-on-kaggle/fem-on-kaggle' && (
        (
          github.event_name == 'schedule' && needs.build_mpi4py.result == 'success'
        ) || (
          github.event_name != 'schedule' && needs.build_mpi4py.result == 'success' && always() && !cancelled()
        )
      )
    uses: fem-on-kaggle/fem-on-kaggle/.github/workflows/release.yml@main
    with:
      library: "mpi4py"
      task: "test"
      args: ""
      strip-args-when-packaging: ""

  # OCC build & test
  build_occ:
    needs: [test_gcc]
    if: >-
      github.repository == 'fem-on-kaggle/fem-on-kaggle' && (
        (
          github.event_name == 'schedule' && needs.test_gcc.result == 'success'
        ) || (
          github.event_name != 'schedule' && github.event.inputs.library == 'occ' && needs.test_gcc.result == 'skipped' && always() && !cancelled()
        ) || (
          github.event_name != 'schedule' && github.event.inputs.library != 'occ' && needs.test_gcc.result == 'success' && always() && !cancelled()
        )
      )
    uses: fem-on-kaggle/fem-on-kaggle/.github/workflows/release.yml@main
    with:
      library: "occ"
      task: "build"
      args: ""
      strip-args-when-packaging: ""
    secrets:
      REPO_ACCESS_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}
      WEBSITE_ACCESS_TOKEN: ${{ secrets.WEBSITE_ACCESS_TOKEN }}

  test_occ:
    needs: [build_occ]
    if: >-
      github.repository == 'fem-on-kaggle/fem-on-kaggle' && (
        (
          github.event_name == 'schedule' && needs.build_occ.result == 'success'
        ) || (
          github.event_name != 'schedule' && needs.build_occ.result == 'success' && always() && !cancelled()
        )
      )
    uses: fem-on-kaggle/fem-on-kaggle/.github/workflows/release.yml@main
    with:
      library: "occ"
      task: "test"
      args: ""
      strip-args-when-packaging: ""

  # h5py build & test
  build_h5py:
    needs: [test_mpi4py]
    if: >-
      github.repository == 'fem-on-kaggle/fem-on-kaggle' && (
        (
          github.event_name == 'schedule' && needs.test_mpi4py.result == 'success'
        ) || (
          github.event_name != 'schedule' && github.event.inputs.library == 'h5py' && needs.test_mpi4py.result == 'skipped' && always() && !cancelled()
        ) || (
          github.event_name != 'schedule' && github.event.inputs.library != 'h5py' && needs.test_mpi4py.result == 'success' && always() && !cancelled()
        )
      )
    uses: fem-on-kaggle/fem-on-kaggle/.github/workflows/release.yml@main
    with:
      library: "h5py"
      task: "build"
      args: ""
      strip-args-when-packaging: ""
    secrets:
      REPO_ACCESS_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}
      WEBSITE_ACCESS_TOKEN: ${{ secrets.WEBSITE_ACCESS_TOKEN }}

  test_h5py:
    needs: [build_h5py]
    if: >-
      github.repository == 'fem-on-kaggle/fem-on-kaggle' && (
        (
          github.event_name == 'schedule' && needs.build_h5py.result == 'success'
        ) || (
          github.event_name != 'schedule' && needs.build_h5py.result == 'success' && always() && !cancelled()
        )
      )
    uses: fem-on-kaggle/fem-on-kaggle/.github/workflows/release.yml@main
    with:
      library: "h5py"
      task: "test"
      args: ""
      strip-args-when-packaging: ""

  # pybind11 build & test
  build_pybind11:
    needs: [test_mpi4py]
    if: >-
      github.repository == 'fem-on-kaggle/fem-on-kaggle' && (
        (
          github.event_name == 'schedule' && needs.test_mpi4py.result == 'success'
        ) || (
          github.event_name != 'schedule' && github.event.inputs.library == 'pybind11' && needs.test_mpi4py.result == 'skipped' && always() && !cancelled()
        ) || (
          github.event_name != 'schedule' && github.event.inputs.library != 'pybind11' && needs.test_mpi4py.result == 'success' && always() && !cancelled()
        )
      )
    uses: fem-on-kaggle/fem-on-kaggle/.github/workflows/release.yml@main
    with:
      library: "pybind11"
      task: "build"
      args: ""
      strip-args-when-packaging: ""
    secrets:
      REPO_ACCESS_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}
      WEBSITE_ACCESS_TOKEN: ${{ secrets.WEBSITE_ACCESS_TOKEN }}

  test_pybind11:
    needs: [build_pybind11]
    if: >-
      github.repository == 'fem-on-kaggle/fem-on-kaggle' && (
        (
          github.event_name == 'schedule' && needs.build_pybind11.result == 'success'
        ) || (
          github.event_name != 'schedule' && needs.build_pybind11.result == 'success' && always() && !cancelled()
        )
      )
    uses: fem-on-kaggle/fem-on-kaggle/.github/workflows/release.yml@main
    with:
      library: "pybind11"
      task: "test"
      args: ""
      strip-args-when-packaging: ""

  # petsc4py/{development, real} build & test
  build_petsc4py_development_real:
    needs: [test_h5py]
    if: >-
      github.repository == 'fem-on-kaggle/fem-on-kaggle' && (
        (
          github.event_name == 'schedule' && needs.test_h5py.result == 'success'
        ) || (
          github.event_name != 'schedule' && github.event.inputs.library == 'petsc4py' && needs.test_h5py.result == 'skipped' && always() && !cancelled()
        ) || (
          github.event_name != 'schedule' && github.event.inputs.library != 'petsc4py' && needs.test_h5py.result == 'success' && always() && !cancelled()
        )
      )
    uses: fem-on-kaggle/fem-on-kaggle/.github/workflows/release.yml@main
    with:
      library: "petsc4py"
      task: "build"
      args: "development real"
      strip-args-when-packaging: "false"
    secrets:
      REPO_ACCESS_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}
      WEBSITE_ACCESS_TOKEN: ${{ secrets.WEBSITE_ACCESS_TOKEN }}

  test_petsc4py_development_real:
    needs: [build_petsc4py_development_real]
    if: >-
      github.repository == 'fem-on-kaggle/fem-on-kaggle' && (
        (
          github.event_name == 'schedule' && needs.build_petsc4py_development_real.result == 'success'
        ) || (
          github.event_name != 'schedule' && needs.build_petsc4py_development_real.result == 'success' && always() && !cancelled()
        )
      )
    uses: fem-on-kaggle/fem-on-kaggle/.github/workflows/release.yml@main
    with:
      library: "petsc4py"
      task: "test"
      args: "development real"
      strip-args-when-packaging: ""

  # petsc4py/{development, complex} build & test
  build_petsc4py_development_complex:
    needs: [test_h5py]
    if: >-
      github.repository == 'fem-on-kaggle/fem-on-kaggle' && (
        (
          github.event_name == 'schedule' && needs.test_h5py.result == 'success'
        ) || (
          github.event_name != 'schedule' && github.event.inputs.library == 'petsc4py' && needs.test_h5py.result == 'skipped' && always() && !cancelled()
        ) || (
          github.event_name != 'schedule' && github.event.inputs.library != 'petsc4py' && needs.test_h5py.result == 'success' && always() && !cancelled()
        )
      )
    uses: fem-on-kaggle/fem-on-kaggle/.github/workflows/release.yml@main
    with:
      library: "petsc4py"
      task: "build"
      args: "development complex"
      strip-args-when-packaging: "false"
    secrets:
      REPO_ACCESS_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}
      WEBSITE_ACCESS_TOKEN: ${{ secrets.WEBSITE_ACCESS_TOKEN }}

  test_petsc4py_development_complex:
    needs: [build_petsc4py_development_complex]
    if: >-
      github.repository == 'fem-on-kaggle/fem-on-kaggle' && (
        (
          github.event_name == 'schedule' && needs.build_petsc4py_development_complex.result == 'success'
        ) || (
          github.event_name != 'schedule' && needs.build_petsc4py_development_complex.result == 'success' && always() && !cancelled()
        )
      )
    uses: fem-on-kaggle/fem-on-kaggle/.github/workflows/release.yml@main
    with:
      library: "petsc4py"
      task: "test"
      args: "development complex"
      strip-args-when-packaging: ""

  # petsc4py/{release, real} build & test
  build_petsc4py_release_real:
    needs: [test_h5py]
    if: >-
      github.repository == 'fem-on-kaggle/fem-on-kaggle' && (
        (
          github.event_name == 'schedule' && needs.test_h5py.result == 'success'
        ) || (
          github.event_name != 'schedule' && github.event.inputs.library == 'petsc4py' && needs.test_h5py.result == 'skipped' && always() && !cancelled()
        ) || (
          github.event_name != 'schedule' && github.event.inputs.library != 'petsc4py' && needs.test_h5py.result == 'success' && always() && !cancelled()
        )
      )
    uses: fem-on-kaggle/fem-on-kaggle/.github/workflows/release.yml@main
    with:
      library: "petsc4py"
      task: "build"
      args: "release real"
      strip-args-when-packaging: "false"
    secrets:
      REPO_ACCESS_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}
      WEBSITE_ACCESS_TOKEN: ${{ secrets.WEBSITE_ACCESS_TOKEN }}

  test_petsc4py_release_real:
    needs: [build_petsc4py_release_real]
    if: >-
      github.repository == 'fem-on-kaggle/fem-on-kaggle' && (
        (
          github.event_name == 'schedule' && needs.build_petsc4py_release_real.result == 'success'
        ) || (
          github.event_name != 'schedule' && needs.build_petsc4py_release_real.result == 'success' && always() && !cancelled()
        )
      )
    uses: fem-on-kaggle/fem-on-kaggle/.github/workflows/release.yml@main
    with:
      library: "petsc4py"
      task: "test"
      args: "release real"
      strip-args-when-packaging: ""

  # petsc4py/{release, complex} build & test
  build_petsc4py_release_complex:
    needs: [test_h5py]
    if: >-
      github.repository == 'fem-on-kaggle/fem-on-kaggle' && (
        (
          github.event_name == 'schedule' && needs.test_h5py.result == 'success'
        ) || (
          github.event_name != 'schedule' && github.event.inputs.library == 'petsc4py' && needs.test_h5py.result == 'skipped' && always() && !cancelled()
        ) || (
          github.event_name != 'schedule' && github.event.inputs.library != 'petsc4py' && needs.test_h5py.result == 'success' && always() && !cancelled()
        )
      )
    uses: fem-on-kaggle/fem-on-kaggle/.github/workflows/release.yml@main
    with:
      library: "petsc4py"
      task: "build"
      args: "release complex"
      strip-args-when-packaging: "false"
    secrets:
      REPO_ACCESS_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}
      WEBSITE_ACCESS_TOKEN: ${{ secrets.WEBSITE_ACCESS_TOKEN }}

  test_petsc4py_release_complex:
    needs: [build_petsc4py_release_complex]
    if: >-
      github.repository == 'fem-on-kaggle/fem-on-kaggle' && (
        (
          github.event_name == 'schedule' && needs.build_petsc4py_release_complex.result == 'success'
        ) || (
          github.event_name != 'schedule' && needs.build_petsc4py_release_complex.result == 'success' && always() && !cancelled()
        )
      )
    uses: fem-on-kaggle/fem-on-kaggle/.github/workflows/release.yml@main
    with:
      library: "petsc4py"
      task: "test"
      args: "release complex"
      strip-args-when-packaging: ""

  # vtk build & test
  build_vtk:
    needs: [test_h5py]
    if: >-
      github.repository == 'fem-on-kaggle/fem-on-kaggle' && (
        (
          github.event_name == 'schedule' && needs.test_h5py.result == 'success'
        ) || (
          github.event_name != 'schedule' && github.event.inputs.library == 'vtk' && needs.test_h5py.result == 'skipped' && always() && !cancelled()
        ) || (
          github.event_name != 'schedule' && github.event.inputs.library != 'vtk' && needs.test_h5py.result == 'success' && always() && !cancelled()
        )
      )
    uses: fem-on-kaggle/fem-on-kaggle/.github/workflows/release.yml@main
    with:
      library: "vtk"
      task: "build"
      args: ""
      strip-args-when-packaging: ""
    secrets:
      REPO_ACCESS_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}
      WEBSITE_ACCESS_TOKEN: ${{ secrets.WEBSITE_ACCESS_TOKEN }}

  test_vtk:
    needs: [build_vtk]
    if: >-
      github.repository == 'fem-on-kaggle/fem-on-kaggle' && (
        (
          github.event_name == 'schedule' && needs.build_vtk.result == 'success'
        ) || (
          github.event_name != 'schedule' && needs.build_vtk.result == 'success' && always() && !cancelled()
        )
      )
    uses: fem-on-kaggle/fem-on-kaggle/.github/workflows/release.yml@main
    with:
      library: "vtk"
      task: "test"
      args: ""
      strip-args-when-packaging: ""

  # slepc4py/{development, real} build & test
  build_slepc4py_development_real:
    needs: [test_petsc4py_development_real]
    if: >-
      github.repository == 'fem-on-kaggle/fem-on-kaggle' && (
        (
          github.event_name == 'schedule' && needs.test_petsc4py_development_real.result == 'success'
        ) || (
          github.event_name != 'schedule' && github.event.inputs.library == 'slepc4py' && needs.test_petsc4py_development_real.result == 'skipped' && always() && !cancelled()
        ) || (
          github.event_name != 'schedule' && github.event.inputs.library != 'slepc4py' && needs.test_petsc4py_development_real.result == 'success' && always() && !cancelled()
        )
      )
    uses: fem-on-kaggle/fem-on-kaggle/.github/workflows/release.yml@main
    with:
      library: "slepc4py"
      task: "build"
      args: "development real"
      strip-args-when-packaging: "false"
    secrets:
      REPO_ACCESS_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}
      WEBSITE_ACCESS_TOKEN: ${{ secrets.WEBSITE_ACCESS_TOKEN }}

  test_slepc4py_development_real:
    needs: [build_slepc4py_development_real]
    if: >-
      github.repository == 'fem-on-kaggle/fem-on-kaggle' && (
        (
          github.event_name == 'schedule' && needs.build_slepc4py_development_real.result == 'success'
        ) || (
          github.event_name != 'schedule' && needs.build_slepc4py_development_real.result == 'success' && always() && !cancelled()
        )
      )
    uses: fem-on-kaggle/fem-on-kaggle/.github/workflows/release.yml@main
    with:
      library: "slepc4py"
      task: "test"
      args: "development real"
      strip-args-when-packaging: ""

  # slepc4py/{development, complex} build & test
  build_slepc4py_development_complex:
    needs: [test_petsc4py_development_complex]
    if: >-
      github.repository == 'fem-on-kaggle/fem-on-kaggle' && (
        (
          github.event_name == 'schedule' && needs.test_petsc4py_development_complex.result == 'success'
        ) || (
          github.event_name != 'schedule' && github.event.inputs.library == 'slepc4py' && needs.test_petsc4py_development_complex.result == 'skipped' && always() && !cancelled()
        ) || (
          github.event_name != 'schedule' && github.event.inputs.library != 'slepc4py' && needs.test_petsc4py_development_complex.result == 'success' && always() && !cancelled()
        )
      )
    uses: fem-on-kaggle/fem-on-kaggle/.github/workflows/release.yml@main
    with:
      library: "slepc4py"
      task: "build"
      args: "development complex"
      strip-args-when-packaging: "false"
    secrets:
      REPO_ACCESS_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}
      WEBSITE_ACCESS_TOKEN: ${{ secrets.WEBSITE_ACCESS_TOKEN }}

  test_slepc4py_development_complex:
    needs: [build_slepc4py_development_complex]
    if: >-
      github.repository == 'fem-on-kaggle/fem-on-kaggle' && (
        (
          github.event_name == 'schedule' && needs.build_slepc4py_development_complex.result == 'success'
        ) || (
          github.event_name != 'schedule' && needs.build_slepc4py_development_complex.result == 'success' && always() && !cancelled()
        )
      )
    uses: fem-on-kaggle/fem-on-kaggle/.github/workflows/release.yml@main
    with:
      library: "slepc4py"
      task: "test"
      args: "development complex"
      strip-args-when-packaging: ""

  # slepc4py/{release, real} build & test
  build_slepc4py_release_real:
    needs: [test_petsc4py_release_real]
    if: >-
      github.repository == 'fem-on-kaggle/fem-on-kaggle' && (
        (
          github.event_name == 'schedule' && needs.test_petsc4py_release_real.result == 'success'
        ) || (
          github.event_name != 'schedule' && github.event.inputs.library == 'slepc4py' && needs.test_petsc4py_release_real.result == 'skipped' && always() && !cancelled()
        ) || (
          github.event_name != 'schedule' && github.event.inputs.library != 'slepc4py' && needs.test_petsc4py_release_real.result == 'success' && always() && !cancelled()
        )
      )
    uses: fem-on-kaggle/fem-on-kaggle/.github/workflows/release.yml@main
    with:
      library: "slepc4py"
      task: "build"
      args: "release real"
      strip-args-when-packaging: "false"
    secrets:
      REPO_ACCESS_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}
      WEBSITE_ACCESS_TOKEN: ${{ secrets.WEBSITE_ACCESS_TOKEN }}

  test_slepc4py_release_real:
    needs: [build_slepc4py_release_real]
    if: >-
      github.repository == 'fem-on-kaggle/fem-on-kaggle' && (
        (
          github.event_name == 'schedule' && needs.build_slepc4py_release_real.result == 'success'
        ) || (
          github.event_name != 'schedule' && needs.build_slepc4py_release_real.result == 'success' && always() && !cancelled()
        )
      )
    uses: fem-on-kaggle/fem-on-kaggle/.github/workflows/release.yml@main
    with:
      library: "slepc4py"
      task: "test"
      args: "release real"
      strip-args-when-packaging: ""

  # slepc4py/{release, complex} build & test
  build_slepc4py_release_complex:
    needs: [test_petsc4py_release_complex]
    if: >-
      github.repository == 'fem-on-kaggle/fem-on-kaggle' && (
        (
          github.event_name == 'schedule' && needs.test_petsc4py_release_complex.result == 'success'
        ) || (
          github.event_name != 'schedule' && github.event.inputs.library == 'slepc4py' && needs.test_petsc4py_release_complex.result == 'skipped' && always() && !cancelled()
        ) || (
          github.event_name != 'schedule' && github.event.inputs.library != 'slepc4py' && needs.test_petsc4py_release_complex.result == 'success' && always() && !cancelled()
        )
      )
    uses: fem-on-kaggle/fem-on-kaggle/.github/workflows/release.yml@main
    with:
      library: "slepc4py"
      task: "build"
      args: "release complex"
      strip-args-when-packaging: "false"
    secrets:
      REPO_ACCESS_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}
      WEBSITE_ACCESS_TOKEN: ${{ secrets.WEBSITE_ACCESS_TOKEN }}

  test_slepc4py_release_complex:
    needs: [build_slepc4py_release_complex]
    if: >-
      github.repository == 'fem-on-kaggle/fem-on-kaggle' && (
        (
          github.event_name == 'schedule' && needs.build_slepc4py_release_complex.result == 'success'
        ) || (
          github.event_name != 'schedule' && needs.build_slepc4py_release_complex.result == 'success' && always() && !cancelled()
        )
      )
    uses: fem-on-kaggle/fem-on-kaggle/.github/workflows/release.yml@main
    with:
      library: "slepc4py"
      task: "test"
      args: "release complex"
      strip-args-when-packaging: ""

  # Warn if scheduled workflow is about to be disabled
  warn:
    runs-on: ubuntu-latest
    if: github.repository == 'fem-on-kaggle/fem-on-kaggle' && github.ref == 'refs/heads/main' && github.event_name == 'schedule'
    steps:
      - name: Warn if scheduled workflow is about to be disabled
        uses: fem-on-colab/warn-workflow-about-to-be-disabled-action@main
        with:
          workflow-filename: schedule_all.yml
          days-elapsed: 28
